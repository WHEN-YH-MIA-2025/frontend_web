import type { Metadata } from "next";
import { Plus_Jakarta_Sans } from "next/font/google";
import { ThemeProvider } from "@/contexts/ThemeContext";
import { Toaster } from "react-hot-toast";
import "./globals.css";

const plusJakarta = Plus_Jakarta_Sans({
  variable: "--font-plus-jakarta",
  subsets: ["latin"],
});

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

export default function RootLayout({
  children,
}: Readonly<{
  children: React.ReactNode;
}>) {
  return (
    <html lang="en" suppressHydrationWarning>
      <head>
        {/* Prevent theme flash by setting dark class before hydration */}
        <script
          dangerouslySetInnerHTML={{
            __html:
              "(function(){try{var t=localStorage.getItem('theme');var d=matchMedia('(prefers-color-scheme: dark)').matches;var v=t||(d?'dark':'light');if(v==='dark'){document.documentElement.classList.add('dark');}}catch(e){}})();",
          }}
        />
      </head>
      <body className={`${plusJakarta.variable} antialiased`}>
        <ThemeProvider>
          {children}
          <Toaster
            position="top-center"
            toastOptions={{
              // Tailwind classes use theme tokens; they switch with html.dark
              className:
                "bg-background text-foreground border border-border shadow-lg rounded-lg font-sans text-sm backdrop-blur-sm",
              duration: 2400,
              // Inline styles as a fallback to ensure correct colors
              style: {
                background: "var(--background)",
                color: "var(--foreground)",
                borderColor: "var(--border)",
              },
              iconTheme: {
                primary: "var(--color-brand-600)",
                secondary: "var(--background)",
              },
            }}
          />
        </ThemeProvider>
      </body>
    </html>
  );
}
